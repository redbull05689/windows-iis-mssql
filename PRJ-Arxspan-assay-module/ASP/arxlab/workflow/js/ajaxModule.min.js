$.ajaxSetup({headers:{Authorization:jwt}});var ajaxModule=function(){var processRequestTypesArray=function(){return new Promise((function(resolve,reject){var requestTypeParams={appName:window.top.currApp,includeDisabled:"Configuration"==window.top.currApp,AsOfDate:utilities().getDateForService()};getRequestTypes(requestTypeParams).then((function(response){if(void 0!==response){response=utilities().decodeServiceResponce(response),window.requestTypesArray=response.map((function(x){return x.fields=utilities().sortArray(x.fields,"sortOrder"),x}));var showMakeNewRequest=!1;$.each(requestTypesArray,(function(index,requestType){requestType.fieldsDict=makeFieldsDict(requestType.fields),!requestType.canAdd&&requestType.restrictAccess||(showMakeNewRequest=!0)})),showMakeNewRequest&&$("body").addClass("canMakeNewRequest")}resolve(window.requestTypesArray)}))}))},fetchAuditTrailAuthors,getQueueableRequests=function(requestTypeId=null,appName="Workflow",userId=null){return new Promise((function(resolve,reject){if(null!=requestTypeId){var serviceUrl=appServiceEndpoints.QUEUEABLE_REQUESTS(requestTypeId),serviceObj={appName:appName};userId&&(serviceObj.userId=userId),resolve(getFromAppService(serviceUrl,serviceObj))}else resolve({data:"[]"})}))},fetchSpecificRequest=function(request,rowId){null!=requestItemTableNames&&(requestItemTableNames=[]),$("#basicLoadingModal").modal("show");var asOfDate=request.dateCreated;asOfDate=utilities().asOfDateValidator(asOfDate);var inputParams={getFieldData:!0,getItemData:!0,appName:"Workflow"};getRequests(request.id,inputParams).then((function(response){window.preventNotification=1;var thisRequest=response;ajaxModule().getAllLinksForRequest(request.id).then((function(){getVersionedConfigData(thisRequest.requestTypeId,!1,asOfDate).then((function(configResponses){thisRequestType=configResponses[2][0],requestItemTypes=configResponses[1],fields=configResponses[0],requestEditorHelper.generateRequestDetailsRow(thisRequest,$("#requestEditorModal .modal-content"),thisRequestType,requestItemTypes,fields),$("#requestEditorModal .modal-content .dropdownEditorContainer").prepend($('<div class="modalTitleFixed">').text(thisRequest.requestName)),$("#requestEditorModal .modal-content .dropdownEditorContainer").attr("rowId",rowId),$("#basicLoadingModal").modal("hide"),$("#requestEditorModal").modal("show")}))}))}))},getStructureImagesByRequestId=function(requestId){return new Promise((function(resolve,reject){var currAppName=window.top.currApp?window.top.currApp:"Workflow",inputParams={requestId:requestId,width:280,height:140,appName:currAppName};resolve(getFromAppService(appServiceEndpoints.REQUEST_STRUCTURES,inputParams))}))},loadRequestPreviewStructureImages,populateRequestItemTypesList=function(){return new Promise((function(resolve,reject){if(void 0===window.requestItemTypesArray){window.requestItemTypesArray=[],$("select#savedDropdownsListDropdown").empty();var requestItemTypesParams={includeDisabled:!0,isConfigPage:!0,appName:"Configuration",asOfDate:utilities().getDateForService()};getRequestItemTypes(requestItemTypesParams).then((function(response){if(console.log("populateRequestItemTypesList() - success"),void 0!==response){response=utilities().decodeServiceResponce(response),window.requestItemTypesArray=response.map((function(x){return x.fields=utilities().sortArray(x.fields,"sortOrder"),x}));var dropdown=$("<select></select>");$.each(window.requestItemTypesArray,(function(index,requestItemType){requestItemType.fieldsDict=makeFieldsDict(requestItemType.fields);var requestItemType=$("<option></option>").attr("value",index).attr("requestitemtypeid",requestItemType.id).text(requestItemType.displayName);dropdown.append(requestItemType)})),utilities().sortDropdownlist(dropdown),window.requestItemTypesOptionsHTML=dropdown.html()}console.log("set requestItemTypesArray"),console.log(window.requestItemTypesArray),resolve(!0)})).catch((function(){reject(),console.log("error")}))}else resolve(!0)}))},populateSavedFieldsList=function(){return new Promise((function(resolve,reject){var fieldParams;void 0===window.savedFieldsArray?($("select#savedDropdownsListDropdown").empty(),getFields({isConfigPage:!1,appName:"Workflow"}).then((function(response){if(void 0!==response){if("requestItemTypes"===window.requestTypePageMode){const responseArray=JSON.parse(response.data),filteredArray=responseArray.filter(element=>element.dataTypeId!==dataTypeEnums.BIOSPIN_EDITOR);window.savedFieldsArray=filteredArray}else window.savedFieldsArray=JSON.parse(response.data);var dropdown=$("<select></select>"),sortedDropdowns=utilities().sortArray(window.savedFieldsArray,"displayName");$.each(sortedDropdowns,(function(index,field){if(1!=field.disabled){var savedField=$("<option></option>").attr("value",index).attr("savedfieldid",field.id).text(field.displayName);dropdown.append(savedField)}})),window.savedFieldsOptionsHTML=dropdown.html()}resolve(!0)})).catch((function(error){console.log("error",error),reject(!1)}))):resolve(!0)}))},makeFieldsDict=function(fields){var fieldsDict={},sortOrder=[];return console.log(fields),$.each(fields,(function(index,field){var existingKeys=Object.keys(fieldsDict),fieldId=field.requestTypeFieldId.toString();existingKeys.indexOf(fieldId)<0&&(fieldsDict[fieldId]=[],sortOrder.push(fieldId)),fieldsDict[fieldId].push(field)})),fieldsDict.sortOrder=sortOrder,fieldsDict},processCDX=function(cdxmlStr,requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields){$.ajax({url:"/excel2csv/CDXConv",type:"POST",data:{cdxml:cdxmlStr,jwt:jwt,appName:currApp}}).done((function(response){console.log(response),tableFileUpload.addFragmentsToTable(response[0],requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields)}))},processCDXML,CDXToCDXML,checkCache=function(){var serviceObj={configService:!1};utilities().makeAjaxPost("/workflowCache/",{},serviceObj).then((function(response){console.log(response)}))},searchReg,registerCompound,searchAccord,submitField,submitDropdown,fetchFileUploadSetting,storeFileUploadSetting,notificationServiceHealthCheck=function(){return new Promise((function(resolve,reject){resolve(getFromNotificationService(notificationServiceEndpoints.HEALTH_CHECK))}))},getUnreadNotifications=function(){return new Promise((function(resolve,reject){if(window.top!=window.self)resolve([]);else{var baseUrl=notificationServiceEndpoints.UNREAD_NOTIFICATIONS,paramObj;resolve(getFromNotificationService(baseUrl,{AsOfDate:"",appName:"Workflow"}))}}))},getUnreadNotificationsCount=function(){return new Promise((function(resolve,reject){if(window.top!=window.self)resolve([]);else{var baseUrl=notificationServiceEndpoints.UNREAD_NOTIFICATIONS_COUNT,paramObj;resolve(getFromNotificationService(baseUrl,{AsOfDate:"",appName:"Workflow"}))}}))},patchNotification,patchNotificatonReadDate,getRequests=function(requestId,inputParams){return new Promise((function(resolve,reject){resolve(getFromAppService(appServiceEndpoints.GET_REQUESTS(requestId),inputParams))}))},getRequestRevision=function(requestId,revisionId,inputParams){return new Promise((function(resolve,reject){""==revisionId?resolve(getRequests(requestId,inputParams)):getFromAppService(appServiceEndpoints.GET_REQUESTS_REVISION(requestId,revisionId),inputParams).then(revResp=>resolve(utilities().decodeServiceResponce(revResp)))}))},postBrowserNotification,getRequestTypes=function(paramObj){return new Promise((function(resolve,reject){resolve(getFromConfigService(configServiceEndpoints.REQUEST_TYPES,paramObj))}))},getRequestItemTypes=function(paramObj){return new Promise((function(resolve,reject){resolve(getFromConfigService(configServiceEndpoints.REQUEST_ITEM_TYPES,paramObj))}))},getFields=function(paramObj){return new Promise((function(resolve,reject){resolve(getFromConfigService(configServiceEndpoints.FIELDS,paramObj))}))},getDropdowns=function(paramObj){return new Promise((function(resolve,reject){resolve(getFromConfigService(configServiceEndpoints.DROPDOWNS,paramObj))}))},getCodes=function(paramObj){return new Promise((function(resolve,reject){resolve(getFromConfigService(configServiceEndpoints.CODES,paramObj))}))},getFromService=function(baseUrl,paramObj,serviceObj){return new Promise((function(resolve,reject){var serviceUrl=utilities().buildGetUrl(baseUrl,paramObj);resolve(utilities().makeAjaxGet(serviceUrl,serviceObj))}))},getFromConfigService=function(baseUrl,paramObj={}){return new Promise((function(resolve,reject){var serviceObj;resolve(getFromService(baseUrl,paramObj,{configService:!0}))}))},getFromAdminService,getFromAppService=function(baseUrl,paramObj={}){return new Promise((function(resolve,reject){var serviceObj;resolve(getFromService(baseUrl,paramObj,{configService:!0,appService:!0}))}))},getFromNotificationService=function(baseUrl,paramObj={}){return new Promise((function(resolve,reject){var serviceObj;resolve(getFromService(baseUrl,paramObj,{configService:!0,notificationService:!0}))}))},getVersionedConfigData=function(requestTypeId,currVersion=!0,dateCreated=""){return new Promise((function(resolve,reject){var versionedData=[],configPromises=[],asOfDate=currVersion?"":utilities().getDateForService(dateCreated),currAppName=window.top.currApp?window.top.currApp:"Workflow",configParams={appName:currAppName,asOfDate:asOfDate};configPromises.push(getFields(configParams)),configParams.requestTypeId=requestTypeId,configPromises.push(getRequestTypes(configParams)),Promise.all(configPromises).then((function(configResponses){var fields=(configResponses=utilities().decodeServiceResponce(configResponses))[0],requestType=configResponses[1];if(0!=requestType.length){requestType[0].fields=utilities().sortArray(requestType[0].fields,"sortOrder");var priorityOptionPromises=[];priorityOptionPromises.push(new Promise((function(resolve,reject){getRequestTypeFieldPrioritizationOptions(requestTypeId).then((function(priorityResponse){var priorityOptions=utilities().decodeServiceResponce(priorityResponse);if(priorityOptions.length>0){var requestTypeFieldId=priorityOptions[0].requestTypeFieldId,requestTypeField=requestType[0].fields.find(x=>x.requestTypeFieldId==requestTypeFieldId);requestTypeField&&(requestTypeField.requestTypeFieldPriorityOptions=priorityOptions)}resolve()}))}))),Promise.all(priorityOptionPromises).then((function(){requestType[0].fieldsDict=makeFieldsDict(requestType[0].fields);var reqItemParams={appName:currAppName,asOfDate:asOfDate,requestItemTypeIds:requestType[0].requestItemTypes.map(x=>x.requestItemTypeId)};getRequestItemTypes(reqItemParams).then((function(requestItemTypes){requestItemTypes=(requestItemTypes=(requestItemTypes=utilities().decodeServiceResponce(requestItemTypes)).map((function(x){return x.fields=utilities().sortArray(x.fields,"sortOrder"),x}))).map((function(requestItem){return requestItem.fieldsDict=makeFieldsDict(requestItem.fields),requestItem})),versionedData.push(fields),versionedData.push(requestItemTypes),versionedData.push(requestType),resolve(versionedData)}))}))}else window.top.swal({title:"Request Type Not Found",type:"warning",text:"This request type was not found. Check to make sure it was not disabled."},(function(){window.top!=window.self?window.top.location="/arxlab/dashboard.asp":"manageRequests"==window.CurrentPageMode?window.top.location.reload():window.top.location="/arxlab/workflow/"}))}))}))},postToService=function(baseUrl,inputData,serviceObj){return new Promise((function(resolve,reject){resolve(utilities().makeAjaxPost(baseUrl,inputData,serviceObj))}))},postToAppService=function(baseUrl,inputData={}){return new Promise((function(resolve,reject){var serviceObj;resolve(postToService(baseUrl,inputData,{configService:!0,appService:!0}))}))},putToService=function(baseUrl,inputData,serviceObj){return new Promise((function(resolve,reject){resolve(utilities().makeAjaxPut(baseUrl,inputData,serviceObj))}))},putToAppService=function(baseUrl,inputData={}){return new Promise((function(resolve,reject){var serviceObj;resolve(putToService(baseUrl,inputData,{configService:!0,appService:!0}))}))},patchToService=function(baseUrl,inputData={},serviceObj){return new Promise((function(resolve,reject){resolve(utilities().makeAjaxPatch(baseUrl,inputData,serviceObj))}))},patchToAppService=function(baseUrl,inputData={}){return new Promise((function(resolve,reject){var serviceObj;resolve(patchToService(baseUrl,inputData,{configService:!0,appService:!0}))}))},isThisTheMostRecent,getUsersWhoCanSeeThisExp=function(){return new Promise((function(resolve,reject){window.top!=window.self?$.ajax({url:"../ajax_loaders/getUsersWhoCanViewThisExperiment.asp",data:{experimentId:window.top.experimentId,experimentType:5},verb:"GET",dataType:"text"}).done((function(resp){resolve(JSON.parse(resp))})).fail((function(resp){reject(resp)})):resolve(window.usersList)}))},getUsersWhoCanSeeThisExp,postRequest=function(request){return new Promise((function(resolve,reject){resolve(postToAppService(appServiceEndpoints.REQUESTS,request))}))},putRequest=function(request){return new Promise((function(resolve,reject){resolve(putToAppService(appServiceEndpoints.REQUESTS,request))}))},patchRequest,updateTransientRecords,commitOrder,cancelReorder,checkAssignedOrderLock=function(inputObj){return new Promise((function(resolve,reject){inputObj.appName="Workflow",resolve(getFromAppService(appServiceEndpoints.CHECK_ASSIGNED_ORDER_LOCK,inputObj))}))},upsertRequestMap,elnFieldUpdate,getRequestName=function(requestId){return new Promise((function(resolve,reject){var nameUrl=appServiceEndpoints.REQUEST_NAME(requestId),inputObj={appName:window.top.currApp};resolve(getFromAppService(nameUrl,inputObj))}))},checkIfUserHasMadeRequests,insertRequestExperimentLink,getRequestTypesICanAdd=function(){return new Promise((function(resolve,reject){var requestTypeParams={appName:window.top.currApp?window.top.currApp:"Workflow",permissionType:"canAdd"};resolve(getFromConfigService(configServiceEndpoints.REQUEST_TYPES_BY_PERMISSION_TYPE,requestTypeParams))}))},getRequestTypesICanAdd=function(){return new Promise((function(resolve,reject){resolve(getRequestTypesByPermission("canAdd"))}))},getRequestTypesICanEdit=function(){return new Promise((function(resolve,reject){resolve(getRequestTypesByPermission("canEdit"))}))},getRequestTypesICanView=function(){return new Promise((function(resolve,reject){resolve(getRequestTypesByPermission("canView"))}))},getRequestTypesByPermission=function(permissionName){return new Promise((function(resolve,reject){var requestTypeParams={appName:window.top.currApp?window.top.currApp:"Workflow",permissionType:permissionName};resolve(getFromConfigService(configServiceEndpoints.REQUEST_TYPES_BY_PERMISSION_TYPE,requestTypeParams))}))},checkDraftRequestedOrder=function(requestTypeId){return new Promise((function(resolve,reject){var url=appServiceEndpoints.CHECK_DRAFT_REQUESTED_ORDER(requestTypeId),paramObj={appName:window.currApp?window.currApp:"Workflow"};resolve(getFromAppService(url,paramObj))}))},getRequestTypeFieldPrioritizationOptions=function(requestTypeId){return new Promise((function(resolve,reject){var url=configServiceEndpoints.GET_REQUEST_TYPE_FIELD_PRIORITY_OPTIONS(requestTypeId),paramObj={appName:window.currApp?window.currApp:"Workflow"};resolve(getFromConfigService(url,paramObj))}))},getAllExperimentId,getFromLinkService=function(baseUrl,paramObj={}){return new Promise((function(resolve,reject){var serviceObj;resolve(getFromService(baseUrl,paramObj,{linkService:!0,configService:!0}))}))},getLinkById,getRequestParentLinks=async function(requestId){return await getLinksHelper(requestId,applicationEnum.REQUEST)},getRequestFieldParentLinks=async function(requestFieldId){return await getLinksHelper(requestFieldId,applicationEnum.REQUEST_FIELD)},getRequestItemFieldParentLinks=async function(requestItemFieldId){return await getLinksHelper(requestItemFieldId,applicationEnum.REQUEST_ITEM_FIELD)},getLinksHelper=async function(originId,originCd){const url=linkServiceEndpoints.GET_PARENT_LINKS(originCd,originId),paramObj={depth:1,appName:window.currApp?window.currApp:"Workflow"};return await getFromLinkService(url,paramObj)},getLinksByIds,decodeLinks=function(linkList){return new Promise((function(resolve,reject){linkList&&Array.isArray(linkList)&&0!=linkList.length||reject("Invalid Input"),linkList=linkList.filter(x=>x);var typeCdObj={};linkList.forEach((function(link){var targetCd=link.targetIdTypeCd;Object.keys(typeCdObj).includes(targetCd.toString())||(typeCdObj[targetCd.toString()]=[]),typeCdObj[targetCd.toString()].push(link)})),resolve(sendToLinkDecoder(typeCdObj))}))},getAllLinksForRequest=function(requestId){return new Promise((function(resolve,reject){getRequestParentLinks(requestId).then((function(x){var data=utilities().decodeServiceResponce(x),typeCdObj={};$.each(data,(function(i,link){var targetCd=link.targetIdTypeCd;Object.keys(typeCdObj).includes(targetCd.toString())||(typeCdObj[targetCd.toString()]=[]),typeCdObj[targetCd.toString()].push(link)})),resolve(sendToLinkDecoder(typeCdObj))}))}))},sendToLinkDecoder=function(linkObj){return new Promise((function(resolve,reject){linkObj||reject("Invalid input.");var linkPromises=[];$.each(Object.keys(linkObj),(function(i,type){var linkList=linkObj[type];linkPromises.push(decodeLink(linkList,type))})),Promise.all(linkPromises).then((function(links){window.top.linkData&&Array.isArray(window.top.linkData)?window.top.linkData=window.top.linkData.concat(links.flat()):window.top.linkData=links.flat(),resolve(window.top.linkData)}))}))},decodeLink=function(linkList,typeCd){var entityIdList=linkList.map(x=>x.targetId);return new Promise((function(resolve,reject){$.ajax({url:"../entityDecode/decode.asp",type:"POST",data:{objectTypeCd:typeCd,objectIdList:JSON.stringify(entityIdList)},tryCount:0,dataType:"json"}).done((function(resp){$.each(resp,(function(i,respData){link=linkList[i],respData.linkSvcId=link.id,respData.description=link.description})),resolve(resp)})).fail((function(error,textStatus,errorThrown){reject()}))}))},updateProjectsWithName,sendFileToELNExperiment,setExperimentDraft;let getAllowedApps,getVendorEndpointData;const loadBioEditorComponent=function(){return new Promise((function(resolve,reject){window.BioInterCom||$.ajax({url:"/node/BioEditorPopup",verb:"GET"}).done((function(resp){resolve($("#BioDiv").html(resp))})).fail((function(error){reject(error)}))}))};var addEditorToProcQueue;return{processRequestTypesArray:processRequestTypesArray,fetchAuditTrailAuthors:function(){return new Promise((function(resolve,reject){$.ajax({url:"../_inclds/experiments/cust/asp/get-co-authors.asp",type:"POST",data:{id:window.top.$("#experimentId").val()}}).done((function(response){window.auditTrailAuthors=response.split(","),window.auditTrailAuthors.pop(),resolve(!0)}))}))},getQueueableRequests:getQueueableRequests,fetchSpecificRequest:fetchSpecificRequest,loadRequestPreviewStructureImages:function(requestId){getStructureImagesByRequestId(requestId).then((function(response){console.log("success"),console.log(response);var structureImageStrings=response.structureImageStrings,structureImageLiArray=[$("<li>").addClass("card noStructurePreviewText").text("No structures found.")];Object.keys(structureImageStrings).includes(requestId.toString())&&(structureImageLiArray=structureImageStrings[requestId].map(x=>$("<li>").addClass("card").append($(x)))),$("ul.requestItemStructurePreviewList").removeClass("loadingStructureImages"),$("ul.requestItemStructurePreviewList").append(structureImageLiArray)})).catch((function(){console.log("error")}))},populateRequestItemTypesList:populateRequestItemTypesList,populateSavedFieldsList:populateSavedFieldsList,makeFieldsDict:makeFieldsDict,processCDXML:function(requestObj,requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields){$.ajax({url:"/excel2csv/CDXMLConv",type:"POST",data:requestObj}).done((function(response){console.log(response),tableFileUpload.addFragmentsToTable(response[0],requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields)}))},CDXToCDXML:function(filename,requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields){$.ajax({url:"/arxlab/accint/getXMLStr.asp",type:"POST",data:{file:filename}}).done((function(response){processCDX(response,requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields)}))},searchReg:function(structure){return new Promise((function(resolve,reject){$.ajax({url:"/arxlab/registration/services/searchStructureInReg.asp",type:"POST",dataType:"json",data:{structure:structure}}).done((function(response){resolve(response)}))}))},registerCompound:function(structure){var theData={addStructureSubmit:1,lastSaltNumber:1,salt_1_cdid:0,salt_1_multiplicity:1,addBatch:0,stereochemistry:-1,addStructureCdxmlData:structure};return new Promise((function(resolve,reject){$.ajax({url:"/arxlab/registration/addStructure.asp",type:"POST",data:theData}).done((function(response){resolve(response)}))}))},searchAccord:function(structure){return new Promise((function(resolve,reject){$.ajax({url:"/arxlab/registration/services/searchAccordStructures.asp",type:"POST",data:{structure:structure}}).done((function(response){resolve(response)}))}))},getDropdowns:getDropdowns,submitField:function(data){return new Promise((function(resolve,reject){var serviceObj={configService:!0};utilities().makeAjaxPost("/fields/upsert",data,serviceObj).then((function(response){resolve(response)}))}))},submitDropdown:function(data){return new Promise((function(resolve,reject){var serviceObj={configService:!0};utilities().makeAjaxPost("/dropdowns/upsert",data,serviceObj).then((function(response){resolve(response)}))}))},fetchFileUploadSetting:function(companyId,userId){return new Promise((function(resolve,reject){var inputData={companyId:companyId,userId:userId};$.ajax({url:"manageConfiguration/fetchFileUploadSetting.asp",data:inputData,verb:"GET"}).done((function(response){resolve(response)}))}))},storeFileUploadSetting:function(companyId,userId,fileUploadSetting,confirmMsg){return new Promise((function(resolve,reject){var inputData={companyId:companyId,userId:userId,fileUploadSetting:fileUploadSetting};$.ajax({url:"manageConfiguration/storeFileUploadSetting.asp",data:inputData,verb:"PUT"}).done((function(response){resolve(confirmMsg)}))}))},notificationServiceHealthCheck:notificationServiceHealthCheck,getUnreadNotifications:getUnreadNotifications,getUnreadNotificationsCount:getUnreadNotificationsCount,patchNotification:function(inputData){return new Promise((function(resolve,reject){var serviceUrl="/BrowserNotifications",serviceObj={configService:!0,notificationService:!0};resolve(utilities().makeAjaxPatch(serviceUrl,inputData,serviceObj))}))},patchNotificatonReadDate:function(inputData){return new Promise((function(resolve,reject){var serviceUrl="/BrowserNotifications/read-date",serviceObj={configService:!0,notificationService:!0};resolve(utilities().makeAjaxPatch(serviceUrl,inputData,serviceObj))}))},getRequests:getRequests,getRequestRevision:getRequestRevision,postBrowserNotification:function(inputData){return new Promise((function(resolve,reject){var serviceUrl="/BrowserNotifications",serviceObj={configService:!0,notificationService:!0};resolve(utilities().makeAjaxPost(serviceUrl,inputData,serviceObj))}))},getUsersWhoCanSeeThisExp:function(){return new Promise((function(resolve,reject){window.top!=window.self?$.ajax({url:"../ajax_loaders/getUsersWhoCanViewThisExperiment.asp",data:{experimentId:window.top.experimentId,experimentType:5},verb:"GET",dataType:"text"}).done((function(resp){var userList=JSON.parse(resp);userList.push(window.usersList.find(x=>x.id==globalUserInfo.userId)),resolve(userList)})).fail((function(resp){reject(resp)})):resolve(window.usersList)}))},getRequestTypes:getRequestTypes,getRequestItemTypes:getRequestItemTypes,getFields:getFields,getCodes:getCodes,getVersionedConfigData:getVersionedConfigData,isThisTheMostRecent:function(reqTypeId,asOfDate,returnJson=!1){return new Promise((function(resolve,reject){var inputData={appName:window.top.currApp,requestTypeId:reqTypeId,AsOfDate:utilities().getDateForService(asOfDate),returnJson:returnJson},serviceObj_configService=!0;resolve(getFromConfigService(configServiceEndpoints.IS_CURRENT_TYPE,inputData))}))},getFromAppService:getFromAppService,getFromAdminService:function(baseUrl,paramObj={}){return new Promise((function(resolve,reject){var serviceObj;resolve(getFromService(baseUrl,paramObj,{configService:!0,adminService:!0}))}))},postToAppService:postToAppService,putToAppService:putToAppService,postRequest:postRequest,putRequest:putRequest,patchRequest:function(request){return new Promise((function(resolve,reject){resolve(patchToAppService(appServiceEndpoints.REQUESTS,request))}))},updateTransientRecords:function(inputObj,endpoint){return new Promise((function(resolve,reject){"assigned"==endpoint?endpoint=appServiceEndpoints.TRANS_ASSIGNED_ORDER:"requested"==endpoint&&(endpoint=appServiceEndpoints.TRANS_REQUESTED_ORDER),inputObj.appName="Workflow",resolve(patchToAppService(endpoint,inputObj))}))},commitOrder:function(endpoint){return new Promise((function(resolve,reject){"assigned"==endpoint?endpoint=appServiceEndpoints.COMMIT_DRAFT_ASSIGNED_ORDER:"requested"==endpoint&&(endpoint=appServiceEndpoints.COMMIT_DRAFT_REQUESTED_ORDER);var requestTypeId=parseInt($("#manageRequestsTable_requestTypeDropdown").find("option:selected").attr("requesttypeid")),inputObj;resolve(patchToAppService(endpoint,{appName:"Workflow",requestTypeId:requestTypeId}))}))},checkAssignedOrderLock:checkAssignedOrderLock,cancelReorder:function(endpoint){return new Promise((function(resolve,reject){"assigned"==endpoint?endpoint=appServiceEndpoints.CLEAR_ASSIGNED_ORDER:"requested"==endpoint&&(endpoint=appServiceEndpoints.CLEAR_REQUESTED_ORDER);var requestTypeId=parseInt($("#manageRequestsTable_requestTypeDropdown").find("option:selected").attr("requesttypeid")),inputObj;resolve(patchToAppService(endpoint,{appName:"Workflow",requestTypeId:requestTypeId}))}))},upsertRequestMap:function(itemId,requestId,dataType){return new Promise((function(resolve,reject){var paramObj={itemId:itemId,requestId:requestId,dataType:dataType},url=utilities().buildGetUrl("/arxlab/workflow/upsertRequestMap.asp",paramObj);resolve($.ajax({url:url}))}))},elnFieldUpdate:function(inputObj){return new Promise((function(resolve,reject){resolve(patchToAppService(appServiceEndpoints.ELN_FIELD_UPDATE,inputObj))}))},getRequestName:getRequestName,checkIfUserHasMadeRequests:function(){var sendObj={appName:window.currApp?window.currApp:"Workflow"};ajaxModule().getFromAppService(appServiceEndpoints.GET_HAS_USER_MADE_REQUESTS,sendObj).then((function(res){"success"==res.result&&res.hasUserMadeRequests&&$("body").addClass("showMyRequests")}))},insertRequestExperimentLink:function(experimentIdList,requestId){return new Promise((function(resolve,reject){var sendObj={experimentIdList:JSON.stringify(experimentIdList),requestId:requestId};resolve($.ajax({url:"/arxlab/workflow/insertRequestExperimentLink.asp",type:"POST",data:sendObj}))}))},getRequestTypesICanAdd:getRequestTypesICanAdd,getRequestTypesICanEdit:getRequestTypesICanEdit,getRequestTypesICanView:getRequestTypesICanView,checkDraftRequestedOrder:checkDraftRequestedOrder,getLinkById:async function(linkId){if(!linkId)return!1;const url=linkServiceEndpoints.GET_LINK(linkId),paramObj={appName:currApp||"Workflow"};return await getFromLinkService(url,paramObj)},getAllLinksForRequest:getAllLinksForRequest,getRequestFieldParentLinks:getRequestFieldParentLinks,getRequestItemFieldParentLinks:getRequestItemFieldParentLinks,decodeLink:decodeLink,getAllExperimentId:async function(experimentId,experimentTypeName){return await $.ajax({url:`/arxlab/ajax_checkers/getAllExperimentId.asp?id=${experimentId}&prefix=${experimentTypeName}`})},getLinksByIds:function(linkIdList){return new Promise((function(resolve,reject){linkIdList&&Array.isArray(linkIdList)&&0!=linkIdList.length||reject("Invalid Input");var paramObj={appName:window.currApp?window.currApp:"Workflow"},promArray=[];linkIdList.forEach(link=>{let baseUrl=linkServiceEndpoints.GET_LINK(link);promArray.push(getFromLinkService(baseUrl,paramObj))}),Promise.all(promArray).then((function(resp){var decodedLinks=[];resp.forEach(response=>{decodedLinks.push(utilities().decodeServiceResponce(response))}),resolve(decodedLinks)}))}))},decodeLinks:decodeLinks,updateProjectsWithName:function(unnamedProjectList,requestName){return new Promise((function(resolve,reject){const postObj={projectIds:JSON.stringify(unnamedProjectList),name:requestName};$.ajax({url:"/arxlab/projects/updateProjectNames.asp",type:"POST",data:postObj}).done((function(resp){resolve(resp)}))}))},sendFileToELNExperiment:function(fileId,experimentId,experimentTypeId,experimentOwnerId){return new Promise((function(resolve,reject){$.ajax({url:"/arxlab/ajax_doers/copyWorkflowFileToExperiment.asp",data:{fileId:fileId,id:experimentId,type:experimentTypeId,ownerId:experimentOwnerId}}).done((function(resp){resolve(resp)}))}))},setExperimentDraft:function(experimentId,experimentTypeId){return new Promise((function(resolve,reject){$.ajax({url:`/arxlab/experiments/ajax/do/saveDraft.asp?experimentId=${experimentId}&experimentType=${experimentTypeId}&c=true`,data:{thePairs:JSON.stringify([{theKey:"experimentId",theVal:experimentId}])},type:"POST"}).done((function(){resolve(!0)}))}))},getAllowedApps:async function(){let paramObj={appName:"configuration"},appList=await getFromConfigService(configServiceEndpoints.GET_ALLOWED_APPS,paramObj);return utilities().decodeServiceResponce(appList)},getVendorEndpointData:async function(applicationTypeId){let paramObj={appName:"configuration"},endpointResp=await getFromConfigService(configServiceEndpoints.GET_VENDOR_ENDPOINT(applicationTypeId),paramObj);return"error"==endpointResp.result?(console.error(endpointResp.error),[]):utilities().decodeServiceResponce(endpointResp)},loadBioEditorComponent:loadBioEditorComponent,addEditorToProcQueue:function(expId,revisionNumber,editorId){return new Promise((function(resolve,reject){$.ajax({url:"/arxlab/ajax_doers/addBioEditorToPdfProcQueue.asp",type:"POST",data:{expId:expId,revisionNumber:revisionNumber,editorId:editorId}}).then((function(resp){"Done"==resp?resolve(resp):reject(resp)})).fail((function(resp){reject(resp)}))}))}}};
//# sourceMappingURL=ajaxModule.min.js.map