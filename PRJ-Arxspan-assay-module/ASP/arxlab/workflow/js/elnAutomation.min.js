var elnAutomation=function(){var genNotebook=function(notebookName="",editor){return new Promise((function(resolve,reject){var notebookDescription="This notebook was generated from a Workflow Request.";""!=notebookName&&(notebookDescription+=` ${notebookName}`);var data={r:Math.random(),notebookName:notebookName,notebookDescription:notebookDescription};genElnObject("../notebooks/create-notebook-ajax.asp",data).then((function(response){$(editor).select2("data",{id:response.notebookId}),resolve({editor:editor,inTable:$(editor).closest(".requestItemsEditor").length>0,isProject:!1,id:response.notebookId})}))}))},genProject=function(projectName="NONAME",editor){return new Promise((function(resolve,reject){""==projectName&&(projectName="NONAME");var inputData={r:Math.random(),projectName:projectName,projectDescription:"This project was generated from a Workflow Request.",disable:1,ajax:1};genElnObject("../projects/create-project.asp",inputData).then((function(response){$(editor).select2("data",{id:response.projectId}),resolve({editor:editor,inTable:$(editor).closest(".requestItemsEditor").length>0,isProject:!0,id:response.projectId})}))}))},genElnObject=function(url,inputData){return new Promise((function(resolve,reject){var reply={};$.ajax({url:url,type:"POST",dataType:"json",data:inputData}).done((function(response){$.each(Object.keys(response),(function(i,key){reply[key]=response[key]})),resolve(reply)})).fail((function(){console.error("Notebook Failed"),reply.msg="Failed to create Notebook",resolve(reply)})).always((function(){console.log("complete")}))}))};return{genNotebook:genNotebook,genProject:genProject}};
//# sourceMappingURL=elnAutomation.min.js.map