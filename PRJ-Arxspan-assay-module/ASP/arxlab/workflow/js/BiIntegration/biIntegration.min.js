function BIModule(){const baseUrl="https://api-dev.boehringer-ingelheim.com:8443/ElabRest/v1",availabilityUrl=`${baseUrl}/calculation/availability`,hsCodeUrl=`${baseUrl}/calculation/hsCode`,regulatedSubstanceUrl=`${baseUrl}/calculation/regulatedSubstance`,safetyAlertsUrl=`${baseUrl}/calculation/safetyIataAlerts`,makePost=async function(url,payload){let response=await $.ajax({url:"/arxlab/workflow/js/BiIntegration/BiProxy.asp",type:"POST",data:{data:JSON.stringify({url:url,data:payload})}});try{return JSON.parse(response)}catch(e){return console.error(e),{}}},getAvailabilityDataForSingleItem=async function(name,molData){const payload=[{name:name,molfile:molData}];return await getAvailabilityDataForList(payload)},getAvailabilityDataForList=async function(structureList){return await makePost(availabilityUrl,structureList)},calculateHsCodeForSingleItem=async function(name,molData){const payload=[{name:name,molfile:molData}];return await calculateHsCodeForList(payload)},calculateHsCodeForList=async function(structureList){return await makePost(hsCodeUrl,structureList)},calculateRegulatedSubstanceInfoForSingleItem=async function(name,molData){const payload=[{name:name,molfile:molData}];return await calculateRegulatedSubstanceInfoForList(payload)},calculateRegulatedSubstanceInfoForList=async function(structureList){return await makePost(regulatedSubstanceUrl,structureList)},calculateSafetyAlertsForSingleItem=async function(name,molData){const payload=[{name:name,molfile:molData}];return await calculateSafetyAlertsForList(payload)},calculateSafetyAlertsForList=async function(structureList){return await makePost(safetyAlertsUrl,structureList)},makeAllCallsForSingleItem=async function(name,molData){const payload=[{name:name,molfile:molData}];return await makeAllCallsForList(payload)},makeAllCallsForList=async function(structureList){let promiseList=[getAvailabilityDataForList(structureList),calculateHsCodeForList(structureList),calculateRegulatedSubstanceInfoForList(structureList)],dataList=await Promise.all(promiseList).catch((function(){window.biRequestNotification.update({title:"Error in service call",message:"",type:"danger"}),window.setTimeout((function(){closeBiNotification()}),3e3)}));return{availability:dataList[0],hsCode:dataList[1],regulatedSubstance:dataList[2]}},getAllBiDataForSingleRow=async function(itemRowNumber,name,molData){if(isNaN(itemRowNumber))return!1;openBiNotification();const BiData=await makeAllCallsForSingleItem(name,molData);BiDataMapping(itemRowNumber,BiData.availability[name],BiData.regulatedSubstance[name],BiData.hsCode[name])},getAllBiDataForList=async function(structureList){openBiNotification();const BiData=await makeAllCallsForList(structureList),nameList=structureList.map(x=>x.name);var dt=$(".dataTables_scrollBody > .requestItemEditorTable.display.dataTable.no-footer").DataTable(),dtData=dt.data().toArray();$.each(nameList,(function(rowNumber,name){dtData[rowNumber]=BiDataMapping(rowNumber,BiData.availability[name],BiData.regulatedSubstance[name],BiData.hsCode[name],!0)})),dt.clear().draw(!1),dt.rows.add(dtData).draw(!1)};var BiDataMapping=function(itemRowNumber,availability=null,regulatedSubstance=null,hsCode=null,retRow=!1){if(isNaN(itemRowNumber))return!1;var dataObj=$(".dataTables_scrollBody > .requestItemEditorTable.display.dataTable.no-footer").DataTable().row(itemRowNumber).data(),itemFields=versionedRequestItems[0].fields;if(availability){var availabilityKeyMap={amount:"Availability Amount",contact:"Availability Contact Info",currency:"Availability Currency",price:"Availability Price",sourceId:"Source ID",source:"Availability Source"};$.each(availabilityKeyMap,(function(key,val){let field=itemFields.find(x=>x.displayName==val),dataArray=availability.map(x=>x[key]);dataObj[field.requestTypeFieldId]={dirty:!0,data:dataArray}}))}if(regulatedSubstance){var regulatedkeyMap={checkComment:"Regulated Substance - Comment",juristicationName:"Regulated Substance - Jurisdiction Name",substanceLegislationName:"Regulated Substance - Legislated Name"};$.each(regulatedkeyMap,(function(key,val){let field=itemFields.find(x=>x.displayName==val),dataArray=regulatedSubstance.map(x=>x[key]);dataObj[field.requestTypeFieldId]={dirty:!0,data:dataArray}}))}if(hsCode){var hsKeyMap={codeBI:"BI HS Code",codeEU:"EU HS Code",codeUS:"US HS Code"};$.each(hsKeyMap,(function(key,val){let field=itemFields.find(x=>x.displayName==val),dataArray=[hsCode[key]];dataObj[field.requestTypeFieldId]={dirty:!0,data:dataArray}}))}return retRow?(closeBiNotification(),dataObj):($(".dataTables_scrollBody > .requestItemEditorTable.display.dataTable.no-footer").DataTable().row(itemRowNumber).data(dataObj).draw(),closeBiNotification(),!0)},bulkLookup=function(dataArray){var structureField=versionedRequestItems[0].fields.find(x=>x.dataTypeId==dataTypeEnums.STRUCTURE);if(!structureField)return dataArray;{var structureFieldId=structureField.requestTypeFieldId,structureArray;const filteredStructureArray=dataArray.map(x=>x[structureFieldId]&&"data"in x[structureFieldId]?x[structureFieldId].data[0]:null).map((structureData,index)=>structureData?{name:`item_${index}`,molfile:structureData}:null).filter(x=>x);getAllBiDataForList(filteredStructureArray)}},openBiNotification=function(){window.biRequestNotification=$.notify({title:"Calling Service",message:"This may take a moment..."},{delay:0,type:"yellowNotification",template:utilities().notifyJSTemplates.default,onClose:function(){window.biRequestNotification=void 0}})},closeBiNotification=function(){window.biRequestNotification&&(window.biRequestNotification.close(),window.biRequestNotification=void 0)};return{getAvailabilityDataForSingleItem:getAvailabilityDataForSingleItem,getAvailabilityDataForList:getAvailabilityDataForList,calculateHsCodeForSingleItem:calculateHsCodeForSingleItem,calculateHsCodeForList:calculateHsCodeForList,calculateRegulatedSubstanceInfoForSingleItem:calculateRegulatedSubstanceInfoForSingleItem,calculateRegulatedSubstanceInfoForList:calculateRegulatedSubstanceInfoForList,calculateSafetyAlertsForSingleItem:calculateSafetyAlertsForSingleItem,calculateSafetyAlertsForList:calculateSafetyAlertsForList,makeAllCallsForSingleItem:makeAllCallsForSingleItem,makeAllCallsForList:makeAllCallsForList,BiDataMapping:BiDataMapping,getAllBiDataForSingleRow:getAllBiDataForSingleRow,getAllBiDataForList:getAllBiDataForList,bulkLookup:bulkLookup}}
//# sourceMappingURL=biIntegration.min.js.map