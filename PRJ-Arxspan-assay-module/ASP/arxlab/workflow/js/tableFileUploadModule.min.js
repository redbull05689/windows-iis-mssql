var tableFileUploadModule=function(){var joinCSVRows=function(csvRows,requestItemFields,rowHeader,orphanedDataHeader,suppressedDataHeader){var joinedRows=[];if(csvRows.filter(x=>Object.keys(x).includes(rowHeader)&&""!=x[rowHeader]).length>0){var rowGroups=[];$.each(csvRows,(function(i,row){""==row[rowHeader]?(0==rowGroups.length&&(rowGroups.push([]),row[orphanedDataHeader]=!0),rowGroups[rowGroups.length-1].push(row)):rowGroups.push([row])})),joinedRows=rowGroups.map(x=>joinCSVRowGroup(x,requestItemFields,suppressedDataHeader))}else joinedRows=csvRows;return joinedRows},joinCSVRowGroup=function(rowGroup,itemFields,suppressedDataHeader){var rowObj={};return $.each(rowGroup,(function(i,subRow){$.each(Object.keys(subRow),(function(j,rowKey){Object.keys(rowObj).includes(rowKey)||(rowObj[rowKey]=[]);var field=itemFields.find(x=>x.displayName==rowKey),allowMultiple;field?field.allowMultiple||rowObj[rowKey].length<1?rowObj[rowKey].push(subRow[rowKey]):rowObj[suppressedDataHeader]=!0:rowObj[rowKey].push(subRow[rowKey])}))})),rowObj},displaySuppressedDataWarning=function(tableId,fileUploadSetting,convertedCSVData,versionedRequestItems,versionedFields,CSVValidation){$("#basicLoadingModal").modal("hide");var warningMsgs=[];CSVValidation.anyOrphanedData&&warningMsgs.push("There are subrows that did not have a designated parent, so the system has marked the first inputted row as the first parent row."),CSVValidation.anySuppressedRows&&warningMsgs.push("There are subrows that will not be displayed because they belong to field rows that do not allow multiple values."),CSVValidation.anyInvalidValues&&warningMsgs.push("There were invalid values submitted to the system. Please check your data for any inconsistencies."),window.top.swal({title:"Are you sure?",text:warningMsgs.join("\r\n\r\n"),type:"warning",showCancelButton:!0,confirmButtonText:"Yes, proceed."},(function(){addCSVDataToTable(tableId,fileUploadSetting,convertedCSVData,versionedRequestItems,versionedFields,CSVValidation.invalidCells)}))},addCSVDataToTable=function(tableId,fileUploadSetting,convertedCSVData,versionedRequestItems,versionedFields,invalidCells=[]){buildUploadTableRows(tableId,fileUploadSetting,convertedCSVData,versionedRequestItems,versionedFields).then((function(dataArray){dataTableModule().bulkAddRows(tableId,dataArray,versionedRequestItems,versionedFields,invalidCells)}))},csvToTable=function(tableId,fileUploadSetting,CSVData,versionedRequestItems,versionedFields){var rowHeader=excelImportParentRow,requestItemTypeId=$(`#${tableId}`).attr("requestitemtypeid"),requestItemType,requestItemFields=versionedRequestItems.find(x=>x.id==requestItemTypeId).fields,orphanedDataHeader="_______orphanedData",suppressedDataHeader="_______suppressedData";if($("#basicLoadingModal").modal("hide"),void 0!==CSVData){var convertedCSVData=$.csv.toObjects(CSVData);convertedCSVData=joinCSVRows(convertedCSVData,requestItemFields,rowHeader,orphanedDataHeader,suppressedDataHeader);var CSVValidation=validateCSVData(tableId,convertedCSVData,orphanedDataHeader,suppressedDataHeader,requestItemFields,versionedFields);Object.values(CSVValidation).some(x=>Array.isArray(x)?x.length:x)?displaySuppressedDataWarning(tableId,fileUploadSetting,convertedCSVData,versionedRequestItems,versionedFields,CSVValidation):addCSVDataToTable(tableId,fileUploadSetting,convertedCSVData,versionedRequestItems,versionedFields)}else window.parent.swal("Please upload a file")},validateCSVData=function(tableId,convertedCSVData,orphanedDataHeader,suppressedDataHeader,requestItemFields,versionedFields){var validationObj={};validationObj.anyOrphanedData=convertedCSVData.filter(x=>x[orphanedDataHeader]).length>0,validationObj.anySuppressedRows=convertedCSVData.filter(x=>x[suppressedDataHeader]).length>0;var affectedCells=[];return validationObj.anyInvalidValues=validateCSVValues(tableId,convertedCSVData,requestItemFields,affectedCells,versionedFields),validationObj.invalidCells=affectedCells,validationObj},validateCSVValues=function(tableId,convertedCSVData,requestItemFields,affectedCells,versionedFields){var validationArr=[];return $.each(convertedCSVData,(function(i,row){var rowValidationArr=[];$.each(Object.keys(row),(function(j,key){var cell=row[key],field=requestItemFields.find(x=>x.displayName==key&&0==x.disabled),invalid=!1;field&&(invalid=Array.isArray(cell)?cell.some(x=>isCSVValueInvalid(x,field,versionedFields)):isCSVValueInvalid(cell,field,versionedFields))&&affectedCells.push({column:field.sortOrder+dataTableModule().getNumOfAdditionalCols()-1,row:$(`#${tableId}`).DataTable().rows().count()+i}),rowValidationArr.push(invalid)})),validationArr.push(rowValidationArr.some(x=>x))})),validationArr.some(x=>x)},isCSVValueInvalid=function(value,field,versionedFields){var invalidValue=!1,dataTypeId=field.dataTypeId,savedFieldId=field.savedFieldId;if(["",null,void 0].includes(value))invalidValue=!1;else if([dataTypeEnums.INTEGER,dataTypeEnums.REAL_NUMBER].includes(dataTypeId))invalidValue=isNaN(Number(value));else if([dataTypeEnums.DROP_DOWN].includes(dataTypeId)){var savedField=versionedFields.find(x=>x.id==savedFieldId);invalidValue=!savedField||null==savedField.options.find(x=>x.displayName==value)}else if([dataTypeEnums.DATE].includes(dataTypeId)){var date=new Date(value);invalidValue=isNaN(date.getTime())}else[dataTypeEnums.USER_LIST,dataTypeEnums.CO_AUTHORS].includes(dataTypeId)&&null!=usersList&&(invalidValue=usersList.find(x=>x.fullName==value));return invalidValue},displayFileImportOptions=function(tableId,uploadType,requestObj,tableNum,fileExtension,newFileName,requestItemTypeId,newRequest,sdFile,versionedRequestItems,versionedFields){$("body").off("click","button.file-upload-setting-submit"),$("body").on("click","button.file-upload-setting-submit",(function(event){fileUploadSubmitCallback(sdFile,versionedRequestItems,versionedFields)})),dataTableModule().checkIfTableIsEmpty(tableId,versionedRequestItems)?processTableUpload(tableId,requestObj,fileExtension,newFileName,requestItemTypeId,"Delete",sdFile,versionedRequestItems,versionedFields):ajaxModule().fetchFileUploadSetting(companyId,globalUserInfo.userId).then((function(response){var fileUploadSetting=response;""===fileUploadSetting&&newRequest?($("#fileImportModal").attr("tableid",tableId),$("#fileImportModal").attr("tablenum",tableNum),$("#fileImportModal").attr("uploadType",void 0!==uploadType?uploadType:""),$("#fileImportModal").attr("fileextension",fileExtension),$("#fileImportModal").attr("requestobj",JSON.stringify(requestObj)),$("#fileImportModal").attr("newfilename",newFileName),$("#fileImportModal").attr("requestitemtypeid",requestItemTypeId),window.requestCSVData=requestObj,$("#fileImportModal").modal("show")):processTableUpload(tableId,requestObj,fileExtension,newFileName,requestItemTypeId,fileUploadSetting=newRequest?fileUploadSetting:"After",sdFile,versionedRequestItems,versionedFields)}))},processTableUpload=function(tableId,requestObj,fileExtension,newFileName,requestItemTypeId,fileUploadSetting,sdFile,versionedRequestItems,versionedFields){var thisItem=versionedRequestItems.find(x=>x.id==requestItemTypeId),allowedGroups=thisItem.allowedGroups,allowedUsers=thisItem.allowedUsers,myPermsGroups=null==allowedGroups?[!0]:allowedGroups.filter(x=>globalUserInfo.userGroups.includes(x.groupId)&&1==x.canAdd),myPermsUsers=null==allowedUsers?[!0]:allowedUsers.filter(x=>globalUserInfo.userId==x.userId&&1==x.canAdd);0!=myPermsGroups.length||0!=myPermsUsers.length?["csv",".csv","xls",".xls","xlsx",".xlsx"].includes(fileExtension)?uploadExcel(tableId,requestObj,fileUploadSetting,versionedRequestItems,versionedFields):["cdx",".cdx"].includes(fileExtension)?ajaxModule().CDXToCDXML(newFileName,requestItemTypeId,fileUploadSetting,tableId,versionedRequestItems,versionedFields):["cdxml",".cdxml"].includes(fileExtension)?ajaxModule().processCDXML(requestObj,requestItemTypeId,fileUploadSetting,tableId,versionedRequestItems,versionedFields):["sdf",".sdf"].includes(fileExtension)?readSDFile(sdFile,fileUploadSetting,tableId,versionedRequestItems,versionedFields):window.parent.swal("Filetype not supported."):window.parent.swal("Cannot Upload File","You currently don't have permission to add request items of this type!","error")},readSDFile=async function(file,fileUploadSetting,tableId,versionedRequestItems,versionedFields){window.sdfUploadProgressNotification=$.notify({title:"Processing your SDF File...",message:""},{delay:0,type:"yellowNotification",template:utilities().notifyJSTemplates.default});const sd=await SDFileModule(file),table=$(`#${tableId}`),requestItemTypeId=table.attr("requestitemtypeid"),requestItemType=versionedRequestItems.find(x=>x.id==requestItemTypeId),columnsArray=dataTableModule().makeColumnsArray(requestItemTypeId,versionedRequestItems,versionedFields),dataArray=sd.molDictList.map((mol,index)=>makeMolRow(mol,index,columnsArray,requestItemType,versionedFields)),returnObj={status:"success",result:{data:dataArray,columns:columnsArray}};processSDFile(returnObj,fileUploadSetting,tableId,versionedRequestItems,versionedFields)},makeMolRow=function(mol,molIndex,columnsArray,requestItemType,versionedFields){let dataObj={};for(key in mol)if("molData"==key){const structureField=requestItemType.fields.find(x=>x.dataTypeId==dataTypeEnums.STRUCTURE);structureField&&(dataObj[structureField.displayName.toLowerCase()]=[mol[key]])}else{const requestItemField=requestItemType.fields.find(x=>x.displayName.toLowerCase()==key.toLowerCase()&&1!=x.disabled);if(requestItemField){const dataTypeId=requestItemField.dataTypeId;if(dataTypeId==dataTypeEnums.DROP_DOWN){const savedField=versionedFields.find(x=>x.id==requestItemField.savedFieldId);if(savedField){const options=savedField.options,selectedOption=options.find(x=>x.displayName==mol[key]);selectedOption&&(dataObj[requestItemField.displayName.toLowerCase()]=[selectedOption.dropdownOptionId])}}else dataObj[requestItemField.displayName.toLowerCase()]=[mol[key]]}}const colsNotInSd=columnsArray.filter(col=>!(col.title.toLowerCase()in dataObj));return colsNotInSd.forEach(column=>{const requestItemField=requestItemType.fields.filter(x=>x.requestTypeFieldId==column.requestItemTypeFieldId&&1!=x.disabled);if(requestItemField.length>0){const userId=globalUserInfo.userId,groupId=$("#assignedUserGroupDropdown").val(),userField=requestItemField.find(x=>x.userId==userId&&x.userDefaultValue),groupField=requestItemField.find(x=>x.groupId==groupId&&x.groupDefaultValue),companyField=requestItemField.find(x=>null==x.groupId&&null==x.userId);let defaultValue="";userField&&userField.userDefaultValue&&(defaultValue=userField.userDefaultValue),groupField&&!defaultValue&&groupField.groupDefaultValue&&(defaultValue=groupField.groupDefaultValue),companyField.defaultValue&&!defaultValue&&(defaultValue=companyField.defaultValue),defaultValue&&(dataObj[companyField.displayName.toLowerCase()]=[defaultValue])}}),dataObj.uniqueIdentifier_hidden=randomString(32,"#A"),dataObj.assignedOrder=molIndex+1,dataObj.sortOrder=molIndex+1,dataObj},processSDFile=function(response,fileUploadSetting,tableId,versionedRequestItems,versionedFields){console.log("success"),"success"==response.status?(window.sdfUploadProgressNotification.update({title:"Successfully processed your SDF File",message:"",type:"success"}),setTimeout((function(){window.sdfUploadProgressNotification.close()}),4500),$("#sdfUploadInput").val(null),tableData=response.result,buildUploadTableRows(tableId,fileUploadSetting,tableData.data,versionedRequestItems,versionedFields).then((function(tableRows){tableData.data=tableRows,console.log("sdfUploadSubmitButton"),dataTableModule().bulkAddRows(tableId,tableRows,versionedRequestItems,versionedFields),$("#basicLoadingModal").modal("hide")}))):window.sdfUploadProgressNotification.update({title:"Failed to process your SDF File",message:"Please check the file for issues and try again.",type:"danger"})},uploadExcel=function(tableId,requestObj,fileUploadSetting,versionedRequestItems,versionedFields){requestObj.jwt=jwt,$.ajax({url:"/excel2csv/api/values",type:"POST",data:requestObj}).done((function(response){console.log(response),csvToTable(tableId,fileUploadSetting,response.value,versionedRequestItems,versionedFields)}))},getAcceptedFileTypes=function(requestItemTypeId,versionedRequestItems){var acceptedFiles=[".csv",".xls",".xlsx"],thisRequestItemType,requestFields;return versionedRequestItems.find(x=>x.id==requestItemTypeId).fields.filter(x=>8==x.dataTypeId).length>0&&(acceptedFiles.push(".sdf"),acceptedFiles.push(".cdx"),acceptedFiles.push(".cdxml")),acceptedFiles},makeRequestItemsFileUploadForm=function(requestItemTypeIndex,requestItemType,versionedRequestItems){var isOldRevision="undefined"!=typeof requestRevId&&""!=requestRevId,requestItemTypeId=requestItemType.requestItemTypeId,thisRequestItemType=versionedRequestItems.find(x=>x.id==requestItemTypeId);if(isOldRevision||void 0===thisRequestItemType)return $("<div></div>");var acceptedFiles=getAcceptedFileTypes(requestItemTypeId,versionedRequestItems),acceptedNames=["Excel"],requestFields;thisRequestItemType.fields.filter(x=>8==x.dataTypeId).length>0&&(acceptedNames.push("SD"),acceptedNames.push("ChemDraw"));var labelStr=acceptedFiles.join(","),acceptedFilesStr=acceptedFiles.join(", "),acceptedStatusStr=[acceptedNames.slice(0,-1).join(", "),acceptedNames.slice(-1)[0]].join(acceptedNames.length<2?"":" or "),requestItemsFileUploadForm=$('<form id="sdfUploadForm" onsubmit="return false;" tablenum="'+requestItemTypeIndex+'"></form>').attr("tableid","requestItemTable"+requestItemType.requestItemId),requestItemsFileUploadLabel=$('<label class="btn btn-default btn-file chooseSdFileButton ">').text("Upload File"),uploadButton=$('<button id="sdfUploadInput" class="sdfUploadInput resumable-browse" accept="'+labelStr+'" tablenum="'+requestItemTypeIndex+'">');requestItemsFileUploadLabel.append(uploadButton);var requestItemsFileUploadStatusHolder=$('<label class="text-info sdfUploadStatusHolder" id="sdfUploadStatusHolder" tablenum="'+requestItemTypeIndex+'">').text("Please choose an "+acceptedStatusStr+" File ("+acceptedFilesStr+")");return requestItemsFileUploadForm.append(requestItemsFileUploadLabel,requestItemsFileUploadStatusHolder),requestItemsFileUploadForm},addFragmentsToTable=function(fragmentArr,requestItemId,fileUploadSetting,tableId,versionedRequestItems,versionedFields){var columnData=dataTableModule().makeColumnsArray(requestItemId,versionedRequestItems,versionedFields),rowData=[],structureCol=columnData.find(dataTableModule().checkForStructure);if(void 0!==structureCol&&0!=fragmentArr.length){var struc_name=structureCol.data;console.log(fragmentArr.length),$.each(fragmentArr,(function(index,fragment){var row={},fragment=fragmentArr[index];row[struc_name]=[fragment],row.sortOrder=index+1,row.uniqueIdentifier_hidden=randomString(32,"#A"),rowData.push(row)})),buildUploadTableRows(tableId,fileUploadSetting,rowData,versionedRequestItems,versionedFields).then((function(tableRows){try{dataTableModule().bulkAddRows(tableId,tableRows,versionedRequestItems,versionedFields),$("#basicLoadingModal").modal("hide")}catch(e){console.log(e)}}))}else window.parent.swal("No structures.")},buildUploadTableRows=function(tableId,fileUploadSetting,tableRows,versionedRequestItems,versionedFields){return new Promise((function(resolve,reject){var thisTable=$(`#${tableId}`),requestItemTypeId=thisTable.attr("requestitemtypeid"),thisRequestItemType;if(thisRequestItemType=versionedRequestItems.find(x=>x.id==requestItemTypeId)){tableRows=tableRows.map((function(row){return $.each(row,(function(key,Val){var thisRequestItemField=thisRequestItemType.fields.find(x=>x.displayName.toLowerCase()==key.toLowerCase());if(thisRequestItemField){var activeField=versionedFields.find(z=>z.id==thisRequestItemField.savedFieldId);if(null!=activeField&&activeField.dataTypeId==dataTypeEnums.DROP_DOWN&&"number"!=typeof Val){var option=activeField.options.find(q=>q.displayName==Val);null!=option&&(row[key]=option.dropdownOptionId)}}})),row}));var requestItemHasStructureField=!1,existingRows=thisTable.DataTable().rows().data().toArray(),requestItemTypeId=$(`#${tableId}`).attr("requestitemtypeid"),thisRequestItemType;(thisRequestItemType=versionedRequestItems.find(x=>x.id==requestItemTypeId))&&(requestItemHasStructureField=thisRequestItemType.fields.some(x=>x.dataTypeId==dataTypeEnums.STRUCTURE));var itemPromises=[];requestItemHasStructureField&&$.each(existingRows,(function(rowIndex,rowData){var thisRow=$(`#${tableId} > tbody`).find("tr")[rowIndex];if(null==thisRow)return;var thisDiv=$(thisRow).find(`div[datatypeid=${dataTypeEnums.STRUCTURE}]`),thisRequestItemTypeFieldId=$(thisDiv).attr("requestitemtypefieldid"),thisRequestItemTypeField=thisRequestItemType.fields.find(x=>x.requestTypeFieldId==thisRequestItemTypeFieldId);const structureImageId=`itemType_${requestItemTypeId}_${rowIndex}_${thisRequestItemTypeFieldId}`;itemPromises.push(new Promise((function(resolve,reject){getChemistryEditorChemicalStructure(structureImageId).then((function(molData){Object.keys(thisRequestItemTypeField.displayName.toLowerCase()).includes(thisRequestItemTypeField.displayName.toLowerCase())||(rowData[thisRequestItemTypeField.displayName.toLowerCase()]={data:[],dirty:!1}),0==rowData[thisRequestItemTypeField.displayName.toLowerCase()].data.length&&rowData[thisRequestItemTypeField.displayName.toLowerCase()].data.push(molData),resolve()}))})))})),tableRows=tableRows.map((function(x){var returnObj={};return $.each(Object.keys(x),(function(index,key){if("Name"!=key){"structure"==key.toLowerCase()&&"undefined"==x[key]&&(x[key]=getEmptyMolFile());var tableVal=x[key];tableVal||(tableVal=[]),Object.keys(tableVal).includes("dirty")&&(tableVal=tableVal.data);var tableData={dirty:!0,data:tableVal=Array.isArray(tableVal)?tableVal:[tableVal]},requestItemTypeField=thisRequestItemType.fields.find(x=>x.displayName.toLowerCase()==key.toLowerCase());if(!requestItemTypeField)return;var requestItemTypeFieldId=requestItemTypeField.requestTypeFieldId;returnObj[requestItemTypeFieldId]=tableData}})),returnObj.uniqueIdentifier_hidden=randomString(32,"#A"),returnObj.requestItemName=Object.keys(returnObj).includes("requestitemname")?returnObj.requestitemname.data[0]:"",returnObj.requestItemId=Object.keys(returnObj).includes("requestitemid")?returnObj.requestitemid.data[0]:0,returnObj})),Promise.all(itemPromises).then((function(){dataTableModule().checkIfTableIsEmpty(tableId,versionedRequestItems)||("Before"==fileUploadSetting?tableRows=tableRows.concat(existingRows):"After"==fileUploadSetting&&(tableRows=existingRows.concat(tableRows))),$.each(tableRows,(function(rowIndex,tableRow){tableRow.sortOrder=rowIndex+1})),resolve(tableRows)}))}}))},fileUploadSubmitCallback=function(sdFile,versionedRequestItems,versionedFields){return new Promise((function(resolve,reject){$("#rememberImportSetting").is(":checked")?resolve(ajaxModule().storeFileUploadSetting(companyId,globalUserInfo.userId,fileUploadSetting)):resolve(!0)})).then((function(response){var fileUploadSetting=$("input[name=fileImportSelect]:checked").val(),uploadType=$("#fileImportModal").attr("uploadtype"),tableId=$("#fileImportModal").attr("tableid"),tableNum=$("#fileImportModal").attr("tablenum"),requestObj=JSON.parse($("#fileImportModal").attr("requestobj")),fileExtension=$("#fileImportModal").attr("fileextension"),newFileName=$("#fileImportModal").attr("newfilename"),requestItemTypeId=$("#fileImportModal").attr("requestitemtypeid");$("#fileImportModal").modal("hide"),$("#basicLoadingModal").modal("show"),processTableUpload(tableId,requestObj,fileExtension,newFileName,requestItemTypeId,fileUploadSetting,sdFile,versionedRequestItems,versionedFields)}))},documentReadyFunction;return{displayFileImportOptions:displayFileImportOptions,getAcceptedFileTypes:getAcceptedFileTypes,makeRequestItemsFileUploadForm:makeRequestItemsFileUploadForm,addFragmentsToTable:addFragmentsToTable,readSDFile:readSDFile,documentReadyFunction:function(){$("body").on("click","button.file-upload-setting-cancel",(function(event){$("#fileImportModal").modal("hide")}))}}};tableFileUpload=tableFileUploadModule(),$(document).ready((function(){tableFileUpload.documentReadyFunction()}));
//# sourceMappingURL=tableFileUploadModule.min.js.map